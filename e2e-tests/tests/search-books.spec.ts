import {test, expect} from "@playwright/test";


const UI_URL = "http://localhost:5173/";

test.beforeEach(async({page}) =>{
  await page.goto(UI_URL);
  //GET THE SIGNIN BUTTON
  await page.getByRole("link",{name: "Sign In"}).click();
  await expect(page.getByRole("heading", {name: "Sign In"})).toBeVisible();
  await page.locator("[name=email]").fill("maimai@gmail.com");
  await page.locator("[name=password]").fill("qazxsw");
  await page.getByRole("button",{name: "Login"}).click();

  await expect(page.getByText("Sign in Successful!")).toBeVisible();
});


test("Should show book search results", async({page}) =>{
  await page.goto(UI_URL);

  await page.getByPlaceholder("type a city to search").fill("Laval");
  await page.getByRole("button", {name: "Search"}).click();

  await expect(page.getByText("Books found in Laval")).toBeVisible();
  await expect(page.getByText("Pragmatic Programmer, The: Your journey to mastery, 20th Anniversary Edition")).toBeVisible();
});

test("Should show hotel detail", async ({page}) => {
  await page.goto(UI_URL);

  await page.getByPlaceholder("type a city to search").fill("Laval");
  await page.getByRole("button", {name: "Search"}).click();

  await page.getByText("Pragmatic Programmer, The: Your journey to mastery, 20th Anniversary Edition").click();
  await expect(page).toHaveURL(/detail/);
  await expect(page.getByRole("button", {name: "Book now"})).toBeVisible();
});


test("Should reserve book", async({page}) => {
  await page.goto(UI_URL);

  await page.getByPlaceholder("type a city to search").fill("Laval");
  const date = new Date();
  date.setDate(date.getDate() + 14);
//The "T" in the date string generated by toISOString() method is part of the ISO 8601 date and time format. In ISO 8601 format, the letter "T" is used to separate the date portion from the time portion in a combined representation.
  const formattedDate = date.toISOString().split("T")[0];
  await page.getByPlaceholder("Return Date").fill(formattedDate);


  await page.getByRole("button", {name: "Search"}).click();

  await page.getByText("Pragmatic Programmer, The: Your journey to mastery, 20th Anniversary Edition").click();
  
  await page.getByRole("button", {name: "Book now"}).click();

  await expect(page.getByText("Total Cost: CAD6")).toBeVisible();

  const stripeFrame = page.frameLocator("iframe").first();
  await stripeFrame.locator('[placeholder="Card number"]').fill("4242424242424242");
  await stripeFrame.locator('[placeholder="MM / YY"]').fill("04/35");
  await stripeFrame.locator('[placeholder="CVC"]').fill("222");
  await stripeFrame.locator('[placeholder="ZIP"]').fill("22222");

  await page.getByRole("button", {name: "Confirm Reservation"}).click();
  await expect(page.getByText("Book Reserved!")).toBeVisible();
});